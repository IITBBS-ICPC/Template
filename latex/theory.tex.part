\section{Theory}
\subsection{Taylor function approximation}
    \[ y_{n+1} = y_n+[{A(x)-g(y)}/g’(y_n)] \]
\subsection{Pentagonal Theorem}
    \begin{align*}
        \prod _{n=1}^{\infty }\left(1-x^{n}\right) 
            &= \sum _{k=-\infty }^{\infty }
                \left(-1\right)^{k}x^{k\left(3k-1\right)/2} \\
            &= 1+\sum _{k=1}^{\infty }(-1)^{k}
                \left(x^{k(3k+1)/2}+x^{k(3k-1)/2}\right)
    \end{align*}

\subsection{Arithmetic Polynomial Evaluation}
    \begin{align*}
        & let \ degree(p(x)) = n; \\ \\
        & \exists \ g(x) \ with \ d(g(x)) = n+1 \\ 
        & such \ that \ e^x g(x) = \sum_{0}^{\infty} (p(i)x^i/i!)
    \end{align*}

\subsection{Lagrange Theorem}
    \begin{gather*}
        let f(g(x)) = x, f(0)=g(0)=0; \\ \\
            [x^n]H(f(x)) = [x^{n-1}] H’(x)/((g(x)/x)^n)
    \end{gather*}

\subsection{Chirp Z Transform}
    \[2ij = \Comb{i+j}{2}-\Comb{i}{2}-\Comb{j}{2} \]

\subsection{Mobius Transform}
    \[\mu (p^k) = [k==0] - [k==1] \]

%% https://codeforces.com/blog/entry/8219

\subsection{Knuth Dp Optimisation}
    \begin{gather*}
        dp(i,j) = \min_{i\leq k\le j} [dp(i,k)+dp(k+1,j)+C(i,j)] \\ \\
        use \ for \ finding \ opt(i,j) \\
        opt(i,j-1) \leq opt(i,j) \leq opt(i+1,j);
    \end{gather*}
   
    \begin{align*}
        & conditions:\\
        & a\leq b\leq c\leq d \\
        & \implies C(b,c) \leq C(a,d) \\
        & \implies C(a,c)+C(b,d) \leq C(a,d)+C(b,c)
    \end{align*}

    \centering
    \begin{algorithmic}
        \For{\texttt{$l$ in [0..n]}}
            \For{\texttt{$i$ in [0..n]}}
                \State $ L \gets opt(i,i+l-1) $
                \State $ R \gets opt(i+1,i+l-2) $
                \For{\texttt{$k$ in [L..R]}}
                    \State $dp(i,i+l) \gets ...$
                \EndFor
            \EndFor
        \EndFor
    \end{algorithmic}